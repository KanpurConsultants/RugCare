@model Model.ViewModel.JobReceiveQAPenaltyListViewModel
@using Core.Common

<style type="text/css">
    #tbody {
        height: 250px;
        overflow-y: scroll;
        width: 100%;
    }

    #gbody-modal {
        height: 250px;
        overflow-y: scroll;
        width: 100%;
    }

    tbody td {
        padding: 2px 2px 2px 2px;
    }

    .textRight {
        text-align: right;
    }
    /*th div{
        position:absolute;
    }*/
</style>

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Sale Orders & Quantities</span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_CreateMultiplePost", "JobReceiveQAPenalty", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal modal-body">

                <div style="padding-right:15px">
                    <div class="row">

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            

                            <div class="panel panel-default" id="grid">
                                <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                                    <div class="row grid-head">
                                        <div class="block text-left" style="width:5%">
                                            Srl.
                                        </div>
                                        <div class="block" style="width:92%">
                                            <div class="row">
                                                <div class="block" style="width:40%">
                                                    Reason
                                                </div>
                                                <div class="block" style="width:10%">
                                                    Remark1
                                                </div>
                                                <div class="block text-right" style="width:15%">
                                                    Amount
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="panel-info" id="gbody-modal">
                                   @for (int i = 0; i < Model.JobReceiveQAPenaltyViewModel.Count(); i++)
                                   {




                                            <div class='block row-index' style='width:5%'>
                                                @Html.HiddenFor(m => m.JobReceiveQAPenaltyViewModel[i].JobReceiveQAHeaderId)
                                                @Html.HiddenFor(m => m.JobReceiveQAPenaltyViewModel[i].JobReceiveQALineId)                 
                                                @Html.HiddenFor(m => m.JobReceiveQAPenaltyViewModel[i].ReasonName, new { @class = "ProdName" })
                                                @Html.HiddenFor(m => m.JobReceiveQAPenaltyViewModel[i].ReasonId, new { @class = "ProdId" })
                                                @Html.HiddenFor(m => m.JobReceiveQAPenaltyViewModel[i].Remark)

                                                @(i + 1)
                                            </div>
                                            <div class='block pull-middle' style='width:94%'>

                                                <div class='row'>

                                                    <div class='block' style='width:40%'>
                                                        <div class="block  ReplacableProduct" style="width: 100%">
                                                            @Model.JobReceiveQAPenaltyViewModel[i].ReasonName
                                                            <span style="font-size:xx-small;cursor:pointer;padding-left:5px" class="text-info glyphicon glyphicon-pencil EditProduct"></span>
                                                        </div>
                                                        <br />
                                                    </div>
                                                    <div>

                                                        <div class='block text-right pull-middle' style='width:15%'>
                                                            @Html.TextBoxFor(m => Model.JobReceiveQAPenaltyViewModel[i].Amount, new { @class = "form-control text-right stockplanQty" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                          <hr style='margin-top:0px;margin-bottom:0px' />

                                         }


                                </div>
                            </div>



                            <div class="row grid-head" style="margin-left:0px;margin-right:0px">
                                <div class="block text-left" style="width:5%">

                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">


                </div>
            </div>
                                                                }
    </div>


<script type="text/javascript">

    $('.stockplanQty').keyup(function () {
        var ConsumptionValidation = false;
        var Count = 0;

        $('.row.crow.grid-body', '.modal-body').each(function () {
            if ($(this).find('input.stockplanQty').val()) {
                Count += parseFloat($(this).find('input.stockplanQty').val());
            }


            //alert($(this).find('input.stockplanQty').val());
            //alert($(this).find('input.BomDetailExists').val());
            if ($(this).find('input.stockplanQty').val() != 0 && $(this).find('input.BomDetailExists').val() == 'False') {
                ConsumptionValidation = true;
               //alert(ConsumptionValidation);
            }

        })
        $('#QtyCount', '.modal-body').text(Count);


        if (ConsumptionValidation == false)
        {
            $('#alertzone').remove();
            $('#submit1').prop('disabled', false);
        }
        else {
            $('#alertzone').show();
            $('#submit1').prop('disabled', true);
        }

    })




</script>


<script type="text/javascript">

    //$('.stockplanQty').keyup(function () {
    //    var Count = 0;

    //    $('.row.crow.grid-body', '.modal-body').each(function () {
    //        if($(this).find('input.stockplanQty').val())
    //        {
    //            Count += parseFloat($(this).find('input.stockplanQty').val());
    //        }
    //    })

    //    $('#QtyCount', '.modal-body').text(Count);


    //})



    CustomSelectFunction($(".ProdHelpList"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', ' ', false, 0);

    $('.EditProduct').click(function () {
        var $Block = $(this).closest('div.row.crow');
        var ProdId = parseInt($Block.find('input.ProdId').val());
        var ProdName = $Block.find('input.ProdName').val();


        if (ProdId && ProdName) {
            var ProdElemId = $Block.find('input.ProdId').attr('id');
            var ProdElemName = $Block.find('input.ProdId').attr('name');
            $Block.find('input.ProdId').remove();
            var elem = '<input type="text" class="form-control multiple-modal ProdHelpList ProdId" style="display:inline;margin-bottom:3px" tabindex="-1" id="' + ProdElemId + '" name="' + ProdElemName + '"/>'
            var Container = $Block.find('div.ReplacableProduct:first');
            Container.html(elem);
            CustomSelectFunction($('.ProdHelpList', $Block), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', ' ', false, 0);
            $('.ProdHelpList', $Block).select2("data", { id: ProdId, text: ProdName });
        }

    })
</script>