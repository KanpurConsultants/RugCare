@model Model.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "MapTrace", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.ProductGroupId)
    @Html.HiddenFor(m => m.ProductId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> MapTrace</span>
                @if (@Model.IsSystemDefine)
                {
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9;margin-left:20px" disabled="disabled" />
                    <span style="font-family: Calibri,sans-serif,Verdana; font-weight:bold ;font-size: large" class="text-danger right "><span class="glyphicon glyphicon-floppy-remove"></span> System Defined</span>
                }
                else
                {
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                }
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "MapTrace", new { @id = @ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "MapTrace", null, new { @class = "cbtn btn-circle glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "MapTrace", new { id = @Model.ProductId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "MapTrace", new { id = @Model.ProductId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "MapTrace", new { @id = @ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Product Details
                    </h4>
                    <div>
                        @*<div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductCategoryId, "Product Category", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ProductCategoryId, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ProductCategoryId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductGroupId, "Product Group", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ProductGroupId, null, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>*@

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.ProductName, "Product Name", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(model => model.ProductName, null, new { @class = "form-control col-xs-6 height required", @readonly = "true" })
                                        @Html.ValidationMessageFor(model => model.ProductName, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.ProductCode, "Product Code", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(model => model.ProductCode, null, new { @class = "form-control col-xs-6 height required", @readonly = "true" })
                                        @Html.ValidationMessageFor(model => model.ProductCode, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductQualityId, "Quality", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ProductQualityId, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ProductQualityId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BaseProductGroupId, "Design", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.BaseProductGroupId, null, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BaseProductSizeId, "Size", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.BaseProductSizeId, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.BaseProductSizeId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ColourId, "Colour", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ColourId, null, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductCategoryId, "Product Category", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ProductCategoryId, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.ProductCategoryId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MapType, "Type", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.DropDownList("MapType", null, new { @class = "form-control col-xs-6 height" })
                                        @Html.ValidationMessageFor(m => m.MapType)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    

                    @*<div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SalesTaxGroupProductId, "Sales Tax Group", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.DropDownListFor(model => model.SalesTaxGroupProductId, new SelectList(ViewBag.SalesTaxList as System.Collections.IEnumerable, "SalesTaxGroupProductId", "SalesTaxGroupProductName"), new { @class = "form-control col-xs-6 height" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UnitId, "Unit", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.DropDownListFor(m => m.UnitId, new SelectList(ViewBag.UnitList as System.Collections.IEnumerable, "UnitId", "UnitName"), new { @class = "form-control col-xs-6 height" })
                                </div>
                            </div>
                        </div>
                    </div>*@
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6" style=" padding-top:4px">
                                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(function()
    {
        var TitleCase= '@Session["TitleCase"]';
        //alert(TitleCase);
        $('#ProductName').focusout(function() {
            if (TitleCase=="UpperCase")
            this.value = this.value.toUpperCase() ;
    });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        //CustomSelectFunction($("#ProductGroupId"), '/MapTrace/GetProductGroup', '/ComboHelpList/SetSingleProductGroup', ' ', false, 0);
        CustomSelectFunction($("#ProductCategoryId"), '/ComboHelpList/GetProductCategory', '/ComboHelpList/SetSingleProductCategory', ' ', false, 0);
        CustomSelectFunction($("#BaseProductGroupId"), '/ComboHelpList/GetProductGroup', '/ComboHelpList/SetSingleProductGroup', ' ', false, 0);
        CustomSelectFunction($("#ColourId"), '/ComboHelpList/GetColours', '/ComboHelpList/SetSingleColour', ' ', false, 0);
        CustomSelectFunction($("#BaseProductSizeId"), '/ComboHelpList/GetSize', '/ComboHelpList/SetSingleSize', ' ', false, 0);
        CustomSelectFunction($("#ProductQualityId"), '/ComboHelpList/GetProductQuality', '/ComboHelpList/SetSingleProductQuality', ' ', false, 0);
        CustomSelectFunction($("#ProductDesignId"), '/ComboHelpList/GetProductDesign', '/ComboHelpList/SetSingleProductDesign', ' ', false, 1);
        CustomSelectFunction($("#ProductInvoiceGroupId"), '/ComboHelpList/GetProductInvoiceGroup', '/ComboHelpList/SetSingleProductInvoiceGroup', ' ', false, 1);
        CustomSelectFunction($("#ProductStyleId"), '/ComboHelpList/GetProductStyle', '/ComboHelpList/SetSingleProductStyle', ' ', false, 1);
        CustomSelectFunction($("#ProductManufacturerId"), '/ComboHelpList/GetProductManufacturer', '/ComboHelpList/SetSingleProductManufacturer', ' ', false, 1);
        CustomSelectFunction($("#DrawBackTariffHeadId"), '/ComboHelpList/GetProductDrawBackTarrif', '/ComboHelpList/SetSingleProductDrawBackTarrif', ' ', false, 1);
        CustomSelectFunction($("#ProcessSequenceHeaderId"), '/ComboHelpList/GetProductProcessSequence', '/ComboHelpList/SetSingleProductProcessSequence', ' ', false, 1);
    });

     $(":submit").on("click", function () {
         var mpoid=@Model.ProductId;
         var tes;
         if(mpoid<=0)
         {
             tes= $('#ProductName').DuplicateCheckForCreate({ name: 'Product', value: $('#ProductName').val(), doctype: 0 });
         }
         else
         {
             tes = $('#ProductName').DuplicateCheckForEdit({ name: 'Product', value: $('#ProductName').val(), doctype: 0,headerId:mpoid });
         }
         if (tes) {
             return false;
         }
         else
         {
             return;
         }
     });

</script>

<script type="text/javascript">
    $('#ProductQualityId,#BaseProductGroupId,#BaseProductSizeId,#ColourId,#MapType,#ProductGroupId').change(function(){
           
        if ($('#ProductQualityId').val()!=null && $('#BaseProductGroupId').val()!=null && $('#BaseProductSizeId').val()!=null && $('#ColourId').val()!=null && $('#ProductQualityId').val()!="" && $('#BaseProductGroupId').val()!="" && $('#BaseProductSizeId').val()!="" && $('#ColourId').val()!="")
        {
            //alert($('#ProductQualityId').val());
            //alert($('#BaseProductGroupId').val());
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("GetMapTraceName"))",
                data: { ProductGroupId: $("#ProductGroupId").val(), ProductQualityId: $("#ProductQualityId").val(),BaseProductGroupId: $("#BaseProductGroupId").val(),BaseProductSizeId: $("#BaseProductSizeId").val(),ColourId: $("#ColourId").val(),Type: $("#MapType").val() },
                success: function (data) {
                    if (data != null)
                    {
                        if (data.ProductName != "")
                        {
                            $("#ProductName").val(data.ProductName);
                            $("#ProductCode").val(data.ProductCode);
                        }
                    }
                },


                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve Product Detail.' + thrownError);
                    ProcessProgress.hide();
                }
            });
        }
        
    });
</script>