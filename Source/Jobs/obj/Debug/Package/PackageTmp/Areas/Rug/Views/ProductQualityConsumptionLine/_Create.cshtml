
@model Model.ViewModels.ProductQualityConsumptionLineViewModel
@using Core.Common

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Quality : @Model.ProductQualityName </span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_CreatePost", "ProductQualityConsumptionLine", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.ProductQualityId)
            @Html.HiddenFor(m => m.ProductQualityBomDetailId)            
            @Html.HiddenFor(m => m.ProductName)


            <div class="form-horizontal modal-body">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProcessId, "Process", new { @class = "control-label col-md-4 col-sm-2 " })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(model => model.ProcessId, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.ProcessId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductId, "Product", new { @class = "control-label col-md-4 col-sm-2 " })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(model => model.ProductId, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                <span id="status" class="text-danger"></span>
                            </div>                            
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitName, "Unit", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(model => model.UnitName, new { @class = "form-control col-xs-7 ", @readonly = true })
                                @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Dimension1Id, "Shade", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(model => model.Dimension1Id, new { @class = "form-control col-xs-7 " })
                                @Html.ValidationMessageFor(model => model.Dimension1Id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Qty, "Qty", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(model => model.Qty, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                                <span id="Qtystatus" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                </div>



                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom left" name="Command:Edit" type="submit"><h2 style="margin:0px" id="submit"><span class="glyphicon glyphicon-floppy-disk black"></span> </h2></button>
                    <button class="btn custom" name="Command:Delete" id="delete" type="submit"><h2 style="margin:0px"><span class="glyphicon glyphicon-trash black"></span> </h2></button>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        CustomSelectFunction($("#ProductId"), '/ComboHelpList/GetProduct', '/ComboHelpList/SetSingleProducts', 'Enter Product Name', false, 0);
        CustomSelectFunction($("#Dimension1Id"), '/ComboHelpList/GetDimension1', '/ComboHelpList/SetSingleDimension1', ' ', false, 0);
        CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', '', false, 0);

        $("#ProductId").select2("focus");

        var id=@Model.ProductQualityBomDetailId;

        $('#delete','.modal-content').click(function (e) {
            if(id>0)
            {
                var url = '/Rug/ProductQualityConsumptionLine/DeletePost';
                $('form#modform').attr('action',url);
                return;
            }
            else
            {
                return false;
            }
        })
    });

</script>

<script type="text/javascript">
    CustomSelectFunction($("#ProductId"), '/ComboHelpList/GetProduct', '/ComboHelpList/SetSingleProducts', ' ', false, 3);
    CustomSelectFunction($("#Dimension1Id"), '/ComboHelpList/GetDimension1', '/ComboHelpList/SetSingleDimension1', ' ', false, 0);
</script>


<script type="text/javascript">
    var form_clean;
    $(document).ready(function () {

        var ProductQualityId = @Model.ProductQualityId;

        alert(ProductQualityId);
        //if (ProductQualityId != 0 && ProductQualityId != null)
        //{
            $("#ProductId").prop('readonly', true);
        //}


        //Calling the function to load the table data/ Line information
        //LoadOverTuftContent();
    });



    var id=@Model.ProductQualityId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
    }


    $(function () {
        //$("#ProductId").change(GetProductDetail);
    })


    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadContent();
    });


    //To focus on the first element on modal load
    $('#myModal').on('shown.bs.modal', function () {
        $("#ProductId").select2("focus");
    });

    //Loading the Table data or Line Information
    function LoadContent() {
        var groupId=@Model.ProductQualityId;
        var QtyCount=0;
        var link="/Rug/ProductQualityConsumptionLine/IndexContent/"+groupId;

        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;
                var head="<tr style='background-color:#428bca'>  <th style='width:10px'><input type='hidden'  /></th> <th style='width:10px'>Serial</th><th class='center' style='width:50px'>Product</th>   <th class='center' style='width:50px'>Shade</th>      <th class='center' style='width:50px'>Product Group</th>       <th class='center' style='width:50px'>Percentage</th>        <th class='center' style='width:50px'>Qty</th>        <th class='center' style='width:50px'>Unit</th> <th style='width:10px'></th>       <th style='width:10px'></th>  </tr>"
                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += "<tr><td><input type='hidden' class='id' value='" + item.ProductQualityBomDetailId + "'/></td> <td>"+ srno +"</td> <td>"+(item.ProductName==null?" ":""+item.ProductName+"")+"</td>        <td>"+(item.Dimension1Name==null?" ":""+item.Dimension1Name+"")+"</td>          <td>"+(item.ProductGroupName==null?" ":""+item.ProductGroupName+"")+"</td>                  <td>" + item.Qty + "</td>                  <td>" + item.Qty + "</td>                  <td>" + item.UnitName + "</td>                  <td><a class='rowEditBlue hidden' Modify href='/Rug/ProductQualityConsumptionLine/_Edit/"+item.ProductQualityBomDetailId+"' ></a></td>       <td></td>  </tr>";
                        srno++;
                        QtyCount+=item.Qty;
                    });
                    row+="<tr> <td></td> <td></td> <td><strong>Total</strong></td>        <td></td>          <td></td>                  <td></td>                  <td>" + QtyCount.toFixed(3) + "</td>                  <td></td><td></td>       <td></td>  </tr>"
                }
                else
                {
                    row+="<tr><td>No Items Found.</td></tr>";
                }
                $("#OverTuftContentHeader").html(head);
                $("#OverTuftContentLine").html(row);
            },
            error: function (BankAccoutDetail) {
                alert("Error");
            }
        });
    }



    $(document).ready(function(){
        enableModalTransitions();
    })
</script>
   